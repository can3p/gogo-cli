package links

import (
	"net/url"

	"{{ .ProjectRepo }}/pkg/util"
)

type argBuilder struct {
	Args []string
}

func (a *argBuilder) Shift() string {
	if len(a.Args) == 0 {
		return ""
	}

	v := a.Args[0]
	a.Args = a.Args[1:]

	return v
}

func (a *argBuilder) BuildQueryString() string {
	if len(a.Args) == 0 {
		return ""
	}

	params := url.Values{}

	idx := 0

	for idx < len(a.Args) {
		name := a.Args[idx]
		value := ""

		if idx+1 < len(a.Args) {
			value = a.Args[idx+1]
		}

		if _, ok := params[name]; !ok {
			params[name] = []string{value}
		} else {
			params[name] = append(params[name], value)
		}
		idx += 2
	}

	return "?" + params.Encode()
}

func Link(name string, args ...string) string {
	builder := argBuilder{
		Args: args,
	}

	var out string

	switch name {
	case "controls":
		out = "/controls"
	case "settings":
		out = "/controls/settings"
	case "privacy_policy":
		out = "/articles/privacy_policy"
	case "terms_of_service":
		out = "/articles/terms_of_service"
	case "article":
		out = "/articles/" + builder.Shift()
	case "invite":
		out = "/invite/" + builder.Shift()
	case "use_case":
		out = "/use-case/" + builder.Shift()
	case "form_accept_invite":
		out = "/invite/" + builder.Shift()
	case "form_signup_waiting_list":
		out = "/form/signup_waiting_list"
	case "form_signup":
		out = "/form/signup"
	case "form_login":
		out = "/login"
	case "confirm_waiting_list":
		out = "/confirm_waiting_list/" + builder.Shift()
	case "confirm_signup":
		out = "/confirm_signup/" + builder.Shift()
	case "form_save_settings":
		out = "/controls/form/save_settings"
	case "form_send_invite":
		out = "/controls/form/send_invite"
	case "form_change_password":
		out = "/controls/form/change_password"
	case "logout":
		out = "/logout"
	case "login":
		out = "/login"
	case "signup":
		out = "/signup"
	}

	return out + builder.BuildQueryString()
}

func AbsLink(name string, args ...string) string {
	return util.SiteRoot() + Link(name, args...)
}
